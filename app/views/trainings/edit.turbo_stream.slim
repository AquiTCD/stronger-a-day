= turbo_stream.update @training do
  = form_with model: @training, url: game_training_path(@game), data: { controller: "training-form" } do |f|
    .grid.border-t.bg-gray-800.border-gray-700.hover:bg-gray-600.items-center.p-2(class="grid-cols-[1fr_auto]")
      div
        .pb-1.col-span-2
          = f.collection_select :character_id, @characters, :id, :display_name, { include_blank: "指定なし" }, data: { "training-form-target": "characters", action: "change->training-form#syncToRecipe" }, class: "border text-base rounded-lg block p-2 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-500 w-full"
        .py-1.col-span-2
          = f.select :recipe_id, options_for_select(@recipes.map { |r| ["#{r.character.display_name}: #{r.movements}", r.id, { "data-character-id": r.character_id } ] }), { include_blank: "関連レシピなし" }, { data: { "training-form-target": "recipes", action: "change->training-form#syncToCharacter" }, class: "border text-base rounded-lg block w-full p-2.5 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-50" }
        .pb-2.col-span-2
          = render "shared/input_pad" do
            = f.text_area :topic, required: true, class: "h-11 resize-none border text-base rounded-lg  block w-full p-2 bg-gray-700 border-gray-600 placeholder-gray-400 text-white focus:ring-blue-500 focus:border-blue-500", data: { "input-pad-target": "input", action: "input->input-pad#input" }
        .col-span-2
          .flex.items-end
            = link_to game_training_path(@game, @training, { character_id: @filters[:character_id] }), method: :get, class: "border font-medium border-gray-400 rounded-lg text-sm px-2 py-1 bg-gray-800 hover:bg-gray-700 hover:border-gray-600 focus:ring-gray-700 block mr-auto" do
              svg(class="w-6 h-6 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24")
                path(stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9h13a5 5 0 0 1 0 10H7M3 9l4-4M3 9l4 4")
            div
              p.text-sm.pb-1
                | 公開
              = f.label "public_#{@training.id}", "公開", class: "relative inline-flex items-center  cursor-pointer" do
                = f.check_box :public, { id: "training_public_#{@training.id}", class: "sr-only peer" }
                div class="mr-1 w-9 h-5 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-800 rounded-full peer bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all border-gray-600 peer-checked:bg-blue-600"
            = button_tag type: "submit", class: "border font-medium border-gray-400 rounded-lg text-sm px-2 py-1 bg-gray-800 hover:bg-gray-700 hover:border-gray-600 focus:ring-gray-700" do
              svg.w-6.h-6.text-white(aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24")
                path(stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m5 12 4.7 4.5 9.3-9")
    = render "shared/filteres_params"
